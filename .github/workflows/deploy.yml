name: lambda-deployment-with-github-action-test

on:
  push:
    branches:
      - main

jobs:
  lambda-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup node environment
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 544022947556.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        run: docker build -t nest-exercise-sales .

      - name: Tag Docker image
        run: docker tag nest-exercise-sales:latest 544022947556.dkr.ecr.us-east-1.amazonaws.com/test-ecr-2:latest

      - name: Push Docker image to ECR
        run: docker push 544022947556.dkr.ecr.us-east-1.amazonaws.com/test-ecr-2:latest

      - name: Install serverless globally
        run: npm install -g serverless

      - name: Deploy lambda function
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_LICENSE_KEY: ${{ secrets.SERVERLESS_LICENSE_KEY }}
          PORT: ${{ env.PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
        run: serverless deploy
